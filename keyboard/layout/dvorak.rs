#[link(name = "keyboard-layout-dvorak", vers = "1.0", package_id = "keyboard-layout-dvorak")];

#[feature(globs)];
use keyboard::key::*;

mod keyboard {
  extern mod key = "keyboard-key";
}

static translateToChar:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '`', '1', '2', '3', '4', '5', '6', '7',
  '8', '9', '0', '[', ']', '\x00', '\x00', '\x00', '\x00', '\x00',
  '/', '*', '-', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\'', ',', '.', 'p', 'y',
  'f', 'g', 'c', 'r', 'l', '/', '=', '\\', '\x00', '\x00',
  '\x00', '7', '8', '9', '+', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'a', 'o', 'e',
  'u', 'i', 'd', 'h', 't', 'n', 's', '-', '\x00', '4',
  '5', '6', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', ';',
  'q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z', '\x00',
  '\x00', '\x00', '1', '2', '3', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '0', '.'
];

static translateToCharShift:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '~', '!', '@', '#', '$', '%', '^', '&',
  '*', '(', ')', '{', '}', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '"', '<', '>', 'P', 'Y',
  'F', 'G', 'C', 'R', 'L', '?', '+', '|', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'A', 'O', 'E',
  'U', 'I', 'D', 'H', 'T', 'N', 'S', '_', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', ':',
  'Q', 'J', 'K', 'X', 'B', 'M', 'W', 'V', 'Z', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00'
];

pub fn translate(key: Key, dead: u32) -> u32 {
  if (!key.shift() && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToChar[key.code] as u32
    }
    else {
      translateToChar[key.code] as u32
    }
  }
  else if (key.shift() && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToCharShift[key.code] as u32
    }
    else {
      translateToCharShift[key.code] as u32
    }
  }
  else {
    0
  }
}
