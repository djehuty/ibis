#[link(name = "keyboard-layout-russian", vers = "1.0", package_id = "keyboard-layout-russian")];

#[feature(globs)];
use keyboard::key::*;

mod keyboard {
  extern mod key = "keyboard-key";
}

static translateToChar:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\u0451', '1', '2', '3', '4', '5', '6', '7',
  '8', '9', '0', '-', '=', '\x00', '\x00', '\x00', '\x00', '\x00',
  '/', '*', '-', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\u0439', '\u0446', '\u0443', '\u043a', '\u0435',
  '\u043d', '\u0433', '\u0448', '\u0449', '\u0437', '\u0445', '\u044a', '\\', '\x00', '\x00',
  '\x00', '7', '8', '9', '+', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\u0444', '\u044b', '\u0432',
  '\u0430', '\u043f', '\u0440', '\u043e', '\u043b', '\u0434', '\u0436', '\u044d', '\x00', '4',
  '5', '6', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\u044f',
  '\u0447', '\u0441', '\u043c', '\u0438', '\u0442', '\u044c', '\u0431', '\u044e', '.', '\x00',
  '\x00', '\x00', '1', '2', '3', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '0', '.'
];

static translateToCharShift:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\u0401', '!', '"', '\u2116', ';', '%', ':', '?',
  '*', '(', ')', '_', '+', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\u0419', '\u0426', '\u0423', '\u041a', '\u0415',
  '\u041d', '\u0413', '\u0428', '\u0429', '\u0417', '\u0425', '\u042a', '/', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\u0424', '\u042b', '\u0412',
  '\u0410', '\u041f', '\u0420', '\u041e', '\u041b', '\u0414', '\u0416', '\u042d', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\u042f',
  '\u0427', '\u0421', '\u041c', '\u0418', '\u0422', '\u042c', '\u0411', '\u042e', ',', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00'
];

pub fn translate(key: Key, dead: u32) -> u32 {
  if (!(key.shift() ^ key.capsLock) && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToChar[key.code as uint] as u32
    }
    else {
      translateToChar[key.code as uint] as u32
    }
  }
  else if ((key.shift() || key.capsLock) && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToCharShift[key.code as uint] as u32
    }
    else {
      translateToCharShift[key.code as uint] as u32
    }
  }
  else {
    0
  }
}
