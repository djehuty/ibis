#[link(name = "keyboard-layout-united_states", vers = "1.0", package_id = "keyboard-layout-united_states")];

#[feature(globs)];
use keyboard::key::*;

mod keyboard {
  extern mod key = "keyboard-key";
}

static translateToChar:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '`', '1', '2', '3', '4', '5', '6', '7',
  '8', '9', '0', '-', '=', '\x00', '\x00', '\x00', '\x00', '\x00',
  '/', '*', '-', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', 'q', 'w', 'e', 'r', 't',
  'y', 'u', 'i', 'o', 'p', '[', ']', '\\', '\x00', '\x00',
  '\x00', '7', '8', '9', '+', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'a', 's', 'd',
  'f', 'g', 'h', 'j', 'k', 'l', ';', '\'', '\x00', '4',
  '5', '6', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'z',
  'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '\x00',
  '\x00', '\x00', '1', '2', '3', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '0', '.'
];

static translateToCharShift:[char, ..173] = [
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '~', '!', '@', '#', '$', '%', '^', '&',
  '*', '(', ')', '_', '+', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', 'Q', 'W', 'E', 'R', 'T',
  'Y', 'U', 'I', 'O', 'P', '{', '}', '|', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'A', 'S', 'D',
  'F', 'G', 'H', 'J', 'K', 'L', ':', '"', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', 'Z',
  'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00', ' ', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
  '\x00', '\x00', '\x00'
];

pub fn translate(key: Key, dead: u32) -> u32 {
  if (!key.shift() && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToChar[key.code] as u32
    }
    else {
      translateToChar[key.code] as u32
    }
  }
  else if (key.shift() && !key.alt() && !key.control()) {
    if (dead != 0) {
      // XXX: use unicode combine
      translateToCharShift[key.code] as u32
    }
    else {
      translateToCharShift[key.code] as u32
    }
  }
  else {
    0
  }
}
